SMALLEST_VIOLIN = [

			'c2', 'e3', 'c3', 'g3', 'g3', 'e3', 'c4', 'c4', 'g3', 'e4', 'c4', 'e4', 'g4', 'e4', 'g4', 'c5', 'c5', 'g4', 'e5', 'e5', 'c5', 'g5', 'g5', 'e5', 'c6', 'c6', 'c6', 'c5',

			'c6', 'c5', 'c5', 'c4', 'f3', 'c5', 'c5', 'c5', 'c5', 'a-4', 'a4', 'c5', 'd4', 'f-3', 'c5',

			'c5', 'c5', 'c5', 'a-4', 'a4', 'd5', 'd4', 'g3', 'd5', 'd5', 'd5', 'd5', 'c5', 'a-4',

			'd5', 'd4', 'g3', 'd5', 'd5', 'd4', 'a3', 'd5', 'd5', 'd4', 'a-3', 'c5', 'a-4', 'c5', 'c4', 'f3', 'c5', 'c5', 'c5',

			'c5', 'a-4', 'a4', 'a-4', 'c5', 'd4', 'f-3', 'c5', 'c5', 'c5', 'c5', 'a-4', 'a4', 'c5', 'd5', 'd4', 'g3',

			'd5', 'd5', 'd5', 'd5', 'c5', 'a-4', 'c5', 'd5', 'd4', 'g3', 'd5', 'd5', 'd4', 'a3', 'd5', 'd5', 'd4', 'a-3', 'c5', 'a-4',

			'd4', 'c4', 'd5', 'f4', 'a-4', 'd5', 'f4', 'a-4', 'd5', 'f4', 'a-4', 'd5', 'd5', 'c5', 'f5', 'c5', 'f4', 'a4', 'c5', 'f4', 'a4', 'c5', 'f4', 'a4',

			'c5', 'c5', 'c5', 'f5', 'a-4', 'a-4', 'a-4', 'a-4', 'a-4', 'a-4', 'c5', 'a-4',

			'a4', 'a-4', 'c5', 'f4', 'g4', 'g4', 'g4', 'g4', 'g4',

			'g4', 'a4', 'g4', 'f4', 'g4', 'a4', 'a4', 'b4', 'b4',

			'b4', 'b4', 'b4', 'b4', 'c5', 'd5', 'e5', 'd5', 'c5',

			'c5', 'c4', 'c5', 'c4', 'c5', 'c4', 'c5', 'c4', 'c5', 'c4', 'a-4', 'a4', 'c5', 'c4', 'c5', 'c4', 'c5', 'c4', 'c5', 'c4',

			'c5', 'c4', 'a-4', 'a4', 'c5', 'c4', 'd5', 'd4', 'f5', 'f4', 'f5', 'f4', 'd5', 'd4', 'f5', 'f4', 'd5', 'd4', 'f5', 'f4', 'g5', 'g4', 'a5', 'a4',

			'c-6', 'e6', 'a5', 'c-6', 'a5', 'c-6', 'e6', 'a5', 'a5', 'a4', 'g5', 'g4', 'f5', 'f4', 'd5', 'd4', 'f5', 'f4', 'g5', 'g4', 'f5', 'f4', 'f5', 'f4',

			'b1', 'g5', 'g4', 'a5', 'a4', 'c6', 'c5', 'c6', 'c5', 'a5', 'a4', 'd6', 'd5', 'c6', 'c5', 'c6', 'c5', 'a5', 'a4', 'a5', 'a4', 'f5', 'f4', 'f5', 'f4',

			'a5', 'a4', 'a5', 'a4', 'f5', 'f4', 'f5', 'f4', 'f5', 'f4', 'f5', 'f4', 'f5', 'c5', 'f4', 'a4', 'c6', 'f6', 'a5', 'f5', 'c7', 'f7', 'f6', 'a6'

			]

Duration = [

			0, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0.1, 0,

			0.1, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0, 0, 0.1,

			0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0, 0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,

			0.1, 0, 0, 0.1, 0.1, 0, 0, 0.1, 0.1, 0, 0, 0.1, 0.1, 0.1, 0, 0, 0.1, 0.1, 0.1,

			0.1, 0.1, 0.1, 0.1, 0.1, 0, 0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0, 0,

			0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0, 0, 0.1, 0.1, 0, 0, 0.1, 0.1, 0, 0, 0.1, 0.1,

			0.1, 0, 0.1, 0, 0, 0.1, 0, 0, 0.1, 0, 0, 0.1, 0.1, 0.1, 0.1, 0.1, 0, 0, 0.1, 0, 0, 0.1, 0, 0,

			0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,

			0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,

			0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,

			0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,

			0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0.1, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0,

			0.1, 0, 0.1, 0.1, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0,

			0.1, 0, 0, 0.1, 0, 0.1, 0, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0,

			0.1, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0,

			0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0, 0.1, 0, 0, 0

			]

Duration1 = [
			
			0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0, 0.1, 0.1, 0.1, 0, 0.3,

			0, 0.4, 0, 0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0, 0, 0.2, 0.2,

			0.2, 0.2, 0.2, 0.1, 0.5, 0, 0, 0.2, 0.2, 0.2, 0.2, 0.1, 0.2, 0.5,

			0, 0, 0.2, 0.2, 0, 0, 0.2, 0.2, 0, 0, 0.2, 0.2, 0.4, 0, 0, 0.2, 0.2, 0.2, 0.2,

			0.1, 0.2, 0.3, 0.2, 0, 0, 0.2, 0.2, 0.2, 0.2, 0.1, 0.2, 0.3, 0.2, 0, 0, 0.2,

			0.2, 0.2, 0.2, 0.1, 0.2, 0.3, 0.2, 0, 0, 0.2, 0.2, 0, 0, 0.2, 0.2, 0, 0, 0.1, 0.2, 0.1,

			0, 0.4, 0, 0, 0.2, 0, 0, 0.2, 0, 0, 0.2, 0.2, 0.1, 0.2, 0.5, 0, 0, 0.2, 0, 0, 0.2, 0, 0, 0.2,

			0.2, 0.2, 0.1, 0.5, 0.2, 0.1, 0.3, 0.2, 0.2, 0.2, 0.2, 0.2,

			0.4, 0.4, 0.7, 0.1, 0.2, 0.2, 0.2, 0.2, 0.2,

			0.2, 0.2, 0.2, 0.4, 0.4, 0.7, 0.1, 0.2, 0.2,

			0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.1, 0.1, 1.2,

			0, 0.2, 0, 0.4, 0, 0.2, 0, 0.2, 0, 0.2, 0.1, 0.5, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2,

			0, 0.2, 0.1, 0.3, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.6,

			0, 0, 0.2, 0, 0.2, 0, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.1,

			0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.1, 0, 0.3, 0, 0.2, 0, 0.2, 0, 0.2, 0, 0.2,

			0, 0.2, 0, 0.2, 0, 0.1, 0, 0.2, 0, 0.3, 0, 0.4, 0, 0, 0, 0.4, 0, 0, 0, 0.4, 0, 0, 0, 0.3

			]

from threading import Thread
import pygame as pg 
import time

pg.mixer.init()
pg.init()

pg.mixer.set_num_channels(len(SMALLEST_VIOLIN))

def play_notes(notePath, duration, duration1):

	global x
	print(notePath) # To see which note is now playing
	time.sleep(duration) # make a pause
	pg.mixer.Sound(notePath).play()

	if duration1 > 0:

		duration1 = duration1-0.1

	time.sleep(duration1) # Let the sound play
	x += 1

path  = f'''{__file__.replace("Piano (World's Smallest Violin).py", "")}Sounds\\'''

th = {}
x = 0
for t in SMALLEST_VIOLIN:

	th[t] = Thread(target = play_notes, args = (path+f'{t}.ogg',Duration[x], Duration1[x]))
	# These are arguments (path+'{}.ogg'.format(t),0.4)
	# Lets start the thread
	th[t].start()
	th[t].join()